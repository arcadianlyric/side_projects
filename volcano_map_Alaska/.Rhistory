library(ggplot2)
library(maps)
df <- data.frame(
group = c("Male", "Female", "Ohter"),
value = c(47.09677, 42.25806, (100-47.09677- 42.25806))
)
ggplot(df, aes(x="", y=value, fill=group))+
geom_bar(width = 1, stat = "identity",alpha=0.6)+
coord_polar("y", start=0) +
scale_fill_manual(values=c( "#F8766D","#00BFC4",'grey70'))
library(repr)
install.packages('repr')
setwd('/Users/YC/Documents/ds/side_projects/side_projects/Alaska_volcano_map')
library(shiny)
library(shinyIncubator)
library(rsconnect)
library(ggplot2)
library(plotly)
runApp()
install.packages('googleVis')
library(shiny)
library(shinyIncubator)
library(rsconnect)
library(ggplot2)
library(plotly)
runApp()
ls()
info <- info[,-1] # remove row annotation, with duplicate so not as rownames
df <- read.delim('/Users/YC/Documents/ds/side_projects/ml_t2d_NGS_prediction/data/GSE81608_human_islets_rpkm.txt', header = T, stringsAsFactors = F)
dim(df)
df$gene.id[1:3]
df$gene.id[1:10]
rownames(df)[1:10]
df2 <- read.delim('/Users/YC/Documents/ds/side_projects/ml_t2d_NGS_prediction/results/top500pcaGene.csv', sep=','header = T, stringsAsFactors = F)
df2 <- read.delim('/Users/YC/Documents/ds/side_projects/ml_t2d_NGS_prediction/results/top500pcaGene.csv', sep=',',header = T, stringsAsFactors = F)
dim(df2)
df2[1:5,1]
colnames(df2)[1:5]
df2[1:5,2]
df1[df1$gene.id=3822,1:5]
df1(which(df1$gene.id=3822),]
df1(which(df1$gene.id==3822),]
df1$gene.id[1:5]
df$gene.id[1:5]
which(df$gene.id==3822)
df[which(df$gene.id==16516)]
max(df$gene.id)
dim(df)
rownames(df) <- df$gene.id
rownames(df)[1:10]
library(Rtsne)
library(mclust)
data <- df[,-1]
info <- read.delim('/Users/YC/Documents/ds/side_projects/ml_t2d_NGS_prediction/data/GSE81608_series_matrix.txt', skip=28, stringsAsFactors = F)
info <- info[,-1] # remove row annotation, with duplicate so not as rownames
names(info) = names(data)
t2d <- as.character(info[11,])
cell.type <- as.character(info[15,])
train <- data[rowSums(data>100)>10,] # 6000 * 1600
alpha <- data[, info[15,]=='cell subtype: alpha']
alpha.t2d <- info[11, info[15,]=='cell subtype: alpha']
alpha.high <- alpha[rowSums(alpha>100)>10,]
alpha.high.log <- log(alpha.high+1)
alpha.tsne <- Rtsne(t(alpha.high.log), dims = 2, perplexity=30, verbose=TRUE, max_iter = 1000)
alpha.t2d[alpha.t2d=='condition: non-diabetic']<- 0
alpha.t2d[alpha.t2d=='condition: T2D']<- 1
alpha.pca <- prcomp(t(alpha.high.log))
alpha.loading <- as.data.frame(alpha.pca$rotation)
alpha.top500.label <- rownames(alpha.loading[order(alpha.loading$PC1, decreasing = T),])[1:500]
alpha.top500 <- alpha.high.log[alpha.top500.label,]
for.ml <- t(rbind(alpha.t2d, alpha.top500))
dim(for.ml)
for.ml[1:5,1:5]
colnames(for.ml)[1]='t2d'
write.csv(for.ml, file='alphaCell-top500pcaGene.csv', quote=F, row.names = F)
getwd()
head(info[11,])
1799*.8
1799*.8*.8
